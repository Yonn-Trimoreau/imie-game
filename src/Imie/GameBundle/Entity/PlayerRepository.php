<?php

namespace Imie\GameBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PlayerRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class PlayerRepository extends EntityRepository
{
    public function createIfNotExists($playerName) {
        $em = $this->getEntityManager();

        $dql = 'SELECT player.id as id, theme.color_bg as bgcolor FROM ImieGameBundle:Player player INNER JOIN ImieGameBundle:Theme theme WITH player.id_theme = theme.id WHERE player.name = :name';
        $query = $em->createQuery($dql);
        $query->setParameter('name', $playerName);

        $res = $query->getResult();
        if(!empty($res)){
            return $res[0];
        }
        else{
            $dql = 'SELECT theme.id FROM ImieGameBundle:Theme theme WHERE theme.color_bg = :color_bg';
            $query = $em->createQuery($dql);
            $query->setParameter('color_bg', '2680f3');
            $themes = $query->getResult();
            $theme = $em->find('ImieGameBundle:Theme',$themes[0]['id']);
            $player = new Player();
            $player->setName($playerName);
            $player->setTheme($theme);
            $em->persist($player);
            $em->flush();
            $playerInfos = ['id' => $player->getId(), 'bgcolor' => $theme->getColorBg()];
            return $playerInfos;
        }
    }

    public function updateTheme($playerId, $bgColor){
        $em = $this->getEntityManager();

        $player = $em->getRepository('ImieGameBundle:Player')->find($playerId);

        $dql = 'SELECT theme.id FROM ImieGameBundle:Theme theme WHERE theme.color_bg = :color_bg';
        $query = $em->createQuery($dql);
        $query->setParameter('color_bg', $bgColor);
        $themes = $query->getResult();
        $theme = $em->find('ImieGameBundle:Theme',$themes[0]['id']);

        $player->setTheme($theme);
        $em->persist($player);
        $em->flush();
    }

    public function getStats(Player $player)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT COUNT(game.id) as won FROM ImieGameBundle:Game game INNER JOIN ImieGameBundle:Player player WITH player.id = game.id_player WHERE game.state = \'won\' AND player.id = :id_player';
        $query = $em->createQuery($dql);
        $query->setParameter('id_player', $player->getId());
        $stat = $query->getResult();
        $stats['won'] = $stat[0]['won'];

        $dql = 'SELECT COUNT(game.id) as lost FROM ImieGameBundle:Game game INNER JOIN ImieGameBundle:Player player WITH player.id = game.id_player WHERE game.state = \'lost\' AND player.id = :id_player';
        $query = $em->createQuery($dql);
        $query->setParameter('id_player', $player->getId());
        $stat = $query->getResult();
        $stats['lost'] = $stat[0]['lost'];

        $dql = 'SELECT game FROM ImieGameBundle:Game game INNER JOIN ImieGameBundle:Player player WITH player.id = game.id_player WHERE game.state = \'started\' AND player.id = :id_player';
        $query = $em->createQuery($dql);
        $query->setParameter('id_player', $player->getId());
        $games = $query->getResult();
        foreach($games as $game){
            $em->remove($game);
        }
        $em->flush();

        return $stats;
    }
}
