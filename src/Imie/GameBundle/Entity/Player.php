<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-07-18 16:09:04.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Imie\GameBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Imie\GameBundle\Entity\Player
 *
 * @ORM\Entity(repositoryClass="PlayerRepository")
 * @ORM\Table(name="player", indexes={@ORM\Index(name="FK_PLAYER_THEME_idx", columns={"id_theme"})})
 */
class Player
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(name="`name`", type="string", length=45)
     */
    protected $name;

    /**
     * @ORM\Column(type="integer")
     */
    protected $id_theme;

    /**
     * @ORM\OneToMany(targetEntity="Game", mappedBy="player")
     * @ORM\JoinColumn(name="id", referencedColumnName="id_player")
     */
    protected $games;

    /**
     * @ORM\ManyToOne(targetEntity="Theme", inversedBy="players")
     * @ORM\JoinColumn(name="id_theme", referencedColumnName="id")
     */
    protected $theme;

    public function __construct()
    {
        $this->games = new ArrayCollection();
        $this->playerThemes = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \Imie\GameBundle\Entity\Player
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of name.
     *
     * @param string $name
     * @return \Imie\GameBundle\Entity\Player
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get the value of name.
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Add Game entity to collection (one to many).
     *
     * @param \Imie\GameBundle\Entity\Game $game
     * @return \Imie\GameBundle\Entity\Player
     */
    public function addGame(Game $game)
    {
        $this->games[] = $game;

        return $this;
    }

    /**
     * Remove Game entity from collection (one to many).
     *
     * @param \Imie\GameBundle\Entity\Game $game
     * @return \Imie\GameBundle\Entity\Player
     */
    public function removeGame(Game $game)
    {
        $this->games->removeElement($game);

        return $this;
    }

    /**
     * Get Game entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGames()
    {
        return $this->games;
    }

    /**
     * Set Theme entity.
     *
     * @param \Imie\GameBundle\Entity\Theme $theme
     * @return \Imie\GameBundle\Entity\Player
     */
    public function setTheme(Theme $theme)
    {
        $this->theme = $theme;

        return $this;
    }

    /**
     * Get Theme entity.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getTheme()
    {
        return $this->theme;
    }

    public function __sleep()
    {
        return array('id', 'name');
    }
}